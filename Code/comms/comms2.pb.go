// Code generated by protoc-gen-go. DO NOT EDIT.
// source: comms2.proto

package comms2

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request_Log struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request_Log) Reset()         { *m = Request_Log{} }
func (m *Request_Log) String() string { return proto.CompactTextString(m) }
func (*Request_Log) ProtoMessage()    {}
func (*Request_Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_fdeb7a6dcd152929, []int{0}
}

func (m *Request_Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Log.Unmarshal(m, b)
}
func (m *Request_Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Log.Marshal(b, m, deterministic)
}
func (m *Request_Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Log.Merge(m, src)
}
func (m *Request_Log) XXX_Size() int {
	return xxx_messageInfo_Request_Log.Size(m)
}
func (m *Request_Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Log proto.InternalMessageInfo

type Response_Log struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_Log) Reset()         { *m = Response_Log{} }
func (m *Response_Log) String() string { return proto.CompactTextString(m) }
func (*Response_Log) ProtoMessage()    {}
func (*Response_Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_fdeb7a6dcd152929, []int{1}
}

func (m *Response_Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Log.Unmarshal(m, b)
}
func (m *Response_Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Log.Marshal(b, m, deterministic)
}
func (m *Response_Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Log.Merge(m, src)
}
func (m *Response_Log) XXX_Size() int {
	return xxx_messageInfo_Response_Log.Size(m)
}
func (m *Response_Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Log proto.InternalMessageInfo

type Request_Propuesta struct {
	Propuesta            string   `protobuf:"bytes,1,opt,name=propuesta,proto3" json:"propuesta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request_Propuesta) Reset()         { *m = Request_Propuesta{} }
func (m *Request_Propuesta) String() string { return proto.CompactTextString(m) }
func (*Request_Propuesta) ProtoMessage()    {}
func (*Request_Propuesta) Descriptor() ([]byte, []int) {
	return fileDescriptor_fdeb7a6dcd152929, []int{2}
}

func (m *Request_Propuesta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Propuesta.Unmarshal(m, b)
}
func (m *Request_Propuesta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Propuesta.Marshal(b, m, deterministic)
}
func (m *Request_Propuesta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Propuesta.Merge(m, src)
}
func (m *Request_Propuesta) XXX_Size() int {
	return xxx_messageInfo_Request_Propuesta.Size(m)
}
func (m *Request_Propuesta) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Propuesta.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Propuesta proto.InternalMessageInfo

func (m *Request_Propuesta) GetPropuesta() string {
	if m != nil {
		return m.Propuesta
	}
	return ""
}

type Response_Propuesta struct {
	Estado               int32    `protobuf:"varint,1,opt,name=estado,proto3" json:"estado,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_Propuesta) Reset()         { *m = Response_Propuesta{} }
func (m *Response_Propuesta) String() string { return proto.CompactTextString(m) }
func (*Response_Propuesta) ProtoMessage()    {}
func (*Response_Propuesta) Descriptor() ([]byte, []int) {
	return fileDescriptor_fdeb7a6dcd152929, []int{3}
}

func (m *Response_Propuesta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Propuesta.Unmarshal(m, b)
}
func (m *Response_Propuesta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Propuesta.Marshal(b, m, deterministic)
}
func (m *Response_Propuesta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Propuesta.Merge(m, src)
}
func (m *Response_Propuesta) XXX_Size() int {
	return xxx_messageInfo_Response_Propuesta.Size(m)
}
func (m *Response_Propuesta) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Propuesta.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Propuesta proto.InternalMessageInfo

func (m *Response_Propuesta) GetEstado() int32 {
	if m != nil {
		return m.Estado
	}
	return 0
}

func init() {
	proto.RegisterType((*Request_Log)(nil), "comms2.Request_Log")
	proto.RegisterType((*Response_Log)(nil), "comms2.Response_Log")
	proto.RegisterType((*Request_Propuesta)(nil), "comms2.Request_Propuesta")
	proto.RegisterType((*Response_Propuesta)(nil), "comms2.Response_Propuesta")
}

func init() {
	proto.RegisterFile("comms2.proto", fileDescriptor_fdeb7a6dcd152929)
}

var fileDescriptor_fdeb7a6dcd152929 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0x2d, 0x36, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x78, 0xb9, 0xb8,
	0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0xe2, 0x7d, 0xf2, 0xd3, 0x95, 0xf8, 0xb8, 0x78, 0x82,
	0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0xc1, 0x7c, 0x43, 0x2e, 0x41, 0x98, 0x74, 0x40, 0x51,
	0x7e, 0x01, 0x88, 0x91, 0x28, 0x24, 0xc3, 0xc5, 0x59, 0x00, 0xe3, 0x48, 0x30, 0x2a, 0x30, 0x6a,
	0x70, 0x06, 0x21, 0x04, 0x94, 0x74, 0xb8, 0x84, 0xe0, 0x46, 0x20, 0xf4, 0x88, 0x71, 0xb1, 0x81,
	0xe8, 0x94, 0x7c, 0xb0, 0x06, 0xd6, 0x20, 0x28, 0xcf, 0xa8, 0x89, 0x91, 0x8b, 0xcd, 0x19, 0xec,
	0x14, 0x21, 0x23, 0x2e, 0x66, 0xa0, 0x95, 0x42, 0xc2, 0x7a, 0x50, 0x87, 0x22, 0xb9, 0x4b, 0x4a,
	0x04, 0x21, 0x88, 0xe4, 0x3a, 0x06, 0x21, 0x17, 0x2e, 0x4e, 0x84, 0x1d, 0x92, 0xe8, 0x3a, 0xe1,
	0x52, 0x52, 0x52, 0x18, 0xfa, 0xe1, 0x72, 0x4a, 0x0c, 0x49, 0x6c, 0xe0, 0x30, 0x31, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0xd7, 0xc0, 0x03, 0x2c, 0x23, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Comms2Client is the client API for Comms2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Comms2Client interface {
	Log(ctx context.Context, in *Request_Log, opts ...grpc.CallOption) (*Response_Log, error)
	Propuesta(ctx context.Context, in *Request_Propuesta, opts ...grpc.CallOption) (*Response_Propuesta, error)
}

type comms2Client struct {
	cc grpc.ClientConnInterface
}

func NewComms2Client(cc grpc.ClientConnInterface) Comms2Client {
	return &comms2Client{cc}
}

func (c *comms2Client) Log(ctx context.Context, in *Request_Log, opts ...grpc.CallOption) (*Response_Log, error) {
	out := new(Response_Log)
	err := c.cc.Invoke(ctx, "/comms2.Comms2/Log", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *comms2Client) Propuesta(ctx context.Context, in *Request_Propuesta, opts ...grpc.CallOption) (*Response_Propuesta, error) {
	out := new(Response_Propuesta)
	err := c.cc.Invoke(ctx, "/comms2.Comms2/Propuesta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Comms2Server is the server API for Comms2 service.
type Comms2Server interface {
	Log(context.Context, *Request_Log) (*Response_Log, error)
	Propuesta(context.Context, *Request_Propuesta) (*Response_Propuesta, error)
}

// UnimplementedComms2Server can be embedded to have forward compatible implementations.
type UnimplementedComms2Server struct {
}

func (*UnimplementedComms2Server) Log(ctx context.Context, req *Request_Log) (*Response_Log, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Log not implemented")
}
func (*UnimplementedComms2Server) Propuesta(ctx context.Context, req *Request_Propuesta) (*Response_Propuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Propuesta not implemented")
}

func RegisterComms2Server(s *grpc.Server, srv Comms2Server) {
	s.RegisterService(&_Comms2_serviceDesc, srv)
}

func _Comms2_Log_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Log)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Comms2Server).Log(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comms2.Comms2/Log",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Comms2Server).Log(ctx, req.(*Request_Log))
	}
	return interceptor(ctx, in, info, handler)
}

func _Comms2_Propuesta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Comms2Server).Propuesta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comms2.Comms2/Propuesta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Comms2Server).Propuesta(ctx, req.(*Request_Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

var _Comms2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comms2.Comms2",
	HandlerType: (*Comms2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Log",
			Handler:    _Comms2_Log_Handler,
		},
		{
			MethodName: "Propuesta",
			Handler:    _Comms2_Propuesta_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "comms2.proto",
}
